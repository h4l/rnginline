language: python

# This doesn't matter much as tox will select the version to execute
# tests against
python: 3.4

# dev.txt only contains the dependencies required to run tox, tox will
# install the rest.
install: "pip install -r requirements/dev.txt"

# Create a matrix containing each tox environment
env:
    global:
        # Configure pip to look for packages in wheelhouse when installing.
        - PIP_FIND_LINKS=$TRAVIS_BUILD_DIR/wheelhouse
    matrix:
        # tox-wheelcache.ini ensures the wheelhouse dir is populated with
        # pre-built Wheels for all dependencies. This avoids building lxml
        # on every test run, which takes ages.
        - CMD="pip install -r requirements/invoke-tasks.txt;
          invoke cache_all_requirement_wheels"
        # The actual test runs:
        - CMD="tox -v -v -e py26"
        - CMD="tox -v -v -e py27"
        - CMD="tox -v -v -e py33"
        - CMD="tox -v -v -e py34"
        - CMD="tox -v -v -e pypy"
        # code linting
        - CMD="tox -v -v -e py27-pep8,py34-pep8"
        # check docs can build
        - CMD="tox -v -v -e docs"
        # readme linting
        - CMD="tox -v -v -e readme"
        # code coverage
        - CMD="pip install codecov -r requirements/invoke-tasks.txt;
          invoke coverage && codecov"

matrix:
  allow_failures:
    # Allow the cache building job to fail as it's not really a test, just
    # an optimisation.
    - env: CMD="pip install -r requirements/invoke-tasks.txt;
           invoke cache_all_requirement_wheels"

# Save and restore the contents of wheelhouse for each build
cache:
    directories:
        - wheelhouse

script:
    - sh -c "$CMD"
